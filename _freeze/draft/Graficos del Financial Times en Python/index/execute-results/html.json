{
  "hash": "8309783987cfb6f35ee1c9bc99281588",
  "result": {
    "markdown": "---\ntitle: Estilo \"Financial Times\" en Matplotlib\ndate: 2024-04-03\ndescription: Por qué? No hay por qué.\ncategories: [codigo, python, gráficos, matplotlib, Financial Times]\nexecute: \n  enabled: true\n  freeze: auto \n---\n\nhttps://medium.com/@romandogadin/style-your-visuals-like-the-financial-times-using-plotly-3e7f1d6e293d\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom matplotlib.patches import Rectangle\nimport seaborn as sns;\n\n```\n:::\n\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\ndata_quiet_quitters = [['2009','thriving',0.12],['2012','thriving',0.13],['2013','thriving',0.14],\n                       ['2014','thriving',0.14],['2015','thriving',0.15],['2016','thriving',0.17],\n                       ['2018','thriving',0.19],['2019','thriving',0.22],['2020','thriving',0.20],\n                       ['2021','thriving',0.21],['2022','thriving',0.23],\n\n                       ['2009','quiet_q',0.61],['2012','quiet_q',0.64],['2013','quiet_q',0.65],\n                       ['2014','quiet_q',0.68],['2015','quiet_q',0.65],['2016','quiet_q',0.66],\n                       ['2018','quiet_q',0.64],['2019','quiet_q',0.61],['2020','quiet_q',0.61],\n                       ['2021','quiet_q',0.60],['2022','quiet_q',0.59],\n                       \n                       ['2009','loud_q',0.27],['2012','loud_q',0.23],['2013','loud_q',0.21],\n                       ['2014','loud_q',0.18],['2015','loud_q',0.20],['2016','loud_q',0.17],\n                       ['2018','loud_q',0.17],['2019','loud_q',0.17],['2020','loud_q',0.19],\n                       ['2021','loud_q',0.19],['2022','loud_q',0.18],\n                      ]\n\n# create data frame\ndf = pd.DataFrame(\n    data=data_quiet_quitters, \n    columns=['year','type','count'])\n```\n:::\n\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\n# https://python-graph-gallery.com/custom-fonts-in-matplotlib/\n\nfrom matplotlib.font_manager import FontProperties\n\n# !!! change it to your path\npersonal_path = '/home/mato/.local/share/fonts/'\n\n# get normal font and store it in `Outfit`\nfont_path = personal_path + 'Outfit-Black.ttf'\noutfit = FontProperties(fname=font_path)\n\n```\n:::\n\n\nFalta:\n- Font outfit, mas 'bold', pero no tan 'bold'\n- Thicks hacia abajo en el eje x\n- Leyendas sin recuadro\n\nListar fonts en terminal:\nfc-list | grep \"Outfit\"\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\nlabels=''\n# Definimos la paleta de color para las barras\n# colors = [\"#ae4e6b\",\"#aad3e3\",\"#ef88a8\"] \ncolors = ['#ff80a8','#bc466b', '#9fd4e2']\ncolor_map = { \n#               \"lineas\": '#e4d9d0',\n              \"lineas\": '#7d7369',\n              \"fondo\": '#fdf1e6',\n              \"titulo\":'#5c5a5b'\n            }\n\nsns.set_palette(sns.color_palette(colors))\n\nfig, ax = plt.subplots(figsize=(15, 7),\n                       dpi=300,\n                       facecolor = color_map['fondo']) # Color de fondo del gráfico\n\nax = sns.histplot(df, x='year', \n                  hue='type', \n                  weights='count',\n                  multiple='stack', \n                  shrink=0.9,\n                  edgecolor=color_map['fondo'], # Color del borde de las barras \n                  linewidth=3.5,\n                  zorder=3\n                  )\n\n# Margen\nax.margins(0.01, 0)  \n\n# Definimos grid sólo horizontal\nax.grid(axis='y', zorder=0)\n\n# Color de fondo del canvas\nax.set_facecolor(color_map['fondo'])\n\n# Color de la línea del eje x\nax.spines['bottom'].set_color(color_map['lineas'])\n\n# Labels sobre las barras\n# https://stackoverflow.com/questions/41296313/stacked-bar-chart-with-centered-labels\n# https://stackoverflow.com/questions/78269028/place-labels-on-top-of-each-stacked-bar-and-set-font-color-in-matplotlib/78269292\nfor c in ax.containers:\n    labs = [f'{r.get_height():.0%}' if r.get_height() > 0 else '' for r in c]\n    ax.bar_label(c, labs, color='w', padding=-20, weight = 'bold')\n    \n# Longitud del tick del eje y\nax.xaxis.set_tick_params(\n                        length=6,\n                        color= color_map['lineas']\n)\nax.yaxis.set_tick_params(\n                        length=0,\n                        color= color_map['lineas']\n)\n# Labels de los ticks del eje y\nax.set_yticks([0,.2,.40,.60,.80,1])\nax.set_yticklabels(['0%','20%','40%','60%','80%','100%'])\n# Font de los ticks\nplt.xticks(font=outfit)\nplt.yticks(font=outfit);\n# Colores de los ticks names\nax.tick_params(colors=color_map['lineas']) # Puede incluir axis='x' para sólo colorear el eje x\n\n# No ponemos titulo al eje Y ni al X\nplt.ylabel('')\nplt.xlabel('')\n\n# Eliminamos el eje x (top), y (right) e y (left)\nax.spines['bottom'].set_linewidth(1)\nax.spines['right'].set_visible(False)\nax.spines['top'].set_visible(False)\nax.spines['left'].set_visible(False)\n\n# Eliminamos la leyenda que Matplolib inserta por defecto\nax.get_legend().remove()\n\n# Leyendas\nfig.legend(\n           bbox_to_anchor=(0.31, 1.03),\n           fancybox = True,\n           fontsize='medium', \n           labels=['Loud quitting (% actively disengaged)',\n                   'Quiet quitting (% not engaged)',\n                   'Thriving at work (% engaged)',],\n           edgecolor = color_map['fondo'],\n           facecolor = 'none'\n)\n\n# Coordinadas para linea negra y cuadro ojo\ny_pos = 1.25\nx_pos = -0.95\n# Linea negra sobre título\nax.add_patch(Rectangle((x_pos,y_pos+0.08),1,0.01,color='black', clip_on=False))\n# Cuadro rojo en título\nax.add_patch(Rectangle((x_pos,y_pos-0.01),2.32,0.07,color='#bc4668', clip_on=False, alpha=0.7))\n\n# Títulos\nplt.suptitle(\"'Quiet quitters' make up the majority of employees globally\", \n             fontsize=24, \n             y=y_pos-0.14, x=0.41,\n             color=color_map['titulo'], \n             font=outfit,\n            );\n\n\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-5-output-1.png){}\n:::\n:::\n\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\ndata = [['2005','A',.10],['2006','A',.15],['2007','A',.10],\n                       ['2005','B',.15],['2006','B',.70],['2007','B',.10],\n                       ['2005','C',.75],['2006','C',.15],['2007','C',.80]\n                      ]\n\n\ndf = pd.DataFrame(\n    data=data, \n    columns=['year','type','count'])\n```\n:::\n\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\nfig, ax = plt.subplots(figsize=(15, 7),facecolor = '#fdf1e6')\nax.set_facecolor('#fdf1e6')\n\nax = sns.histplot(df, x='year', \n                  hue='type', \n                  weights='count',\n                  multiple='stack', \n                  shrink=1,\n                  linewidth=3.5,\n                  zorder=3\n                  )\n\n\n# Definimos grid sólo horizontal\n# plt.grid(False)\nax.grid(axis='y', zorder=0)\n\nax.get_legend().remove()\n\nfor c in ax.containers:\n    ax.bar_label(c, fmt=lambda x: f'{x:.0%}' if x > 0 else '')\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-7-output-1.png){}\n:::\n:::\n\n\n\n",
    "supporting": [
      "index_files/figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}